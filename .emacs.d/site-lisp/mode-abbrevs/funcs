long int a64l("const char *STRING")
void abort("void")
int abs("int NUMBER")
int accept("int SOCKET" "struct sockaddr *ADDR" "socklen_t *LENGTH_PTR")
int access("const char *FILENAME" "int HOW")
double acos("double X")
float acosf("float X")
double acosh("double X")
float acoshf("float X")
long double acoshl("long double X")
long double acosl("long double X")
int addmntent("FILE *STREAM" "const struct mntent *MNT")
int adjtime("const struct timeval *DELTA" "struct timeval *OLDDELTA")
int adjtimex("struct timex *TIMEX")
int aio_cancel("int FILDES" "struct aiocb *AIOCBP")
int aio_cancel64("int FILDES" "struct aiocb64 *AIOCBP")
int aio_error("const struct aiocb *AIOCBP")
int aio_error64("const struct aiocb64 *AIOCBP")
int aio_fsync("int OP" "struct aiocb *AIOCBP")
int aio_fsync64("int OP" "struct aiocb64 *AIOCBP")
void aio_init("const struct aioinit *INIT")
int aio_read("struct aiocb *AIOCBP")
int aio_read64("struct aiocb *AIOCBP")
ssize_t aio_return("const struct aiocb *AIOCBP")
int aio_return64("const struct aiocb64 *AIOCBP")
int aio_suspend("const struct aiocb *const LIST[]" "int NENT" "const struct timespec *TIMEOUT")
int aio_suspend64("const struct aiocb64 *const LIST[]" "int NENT" "const struct timespec *TIMEOUT")
int aio_write("struct aiocb *AIOCBP")
int aio_write64("struct aiocb *AIOCBP")
unsigned int alarm("unsigned int SECONDS")
void * alloca("size_t SIZE");
int alphasort("const void *A" "const void *B")
int alphasort64("const void *A" "const void *B")
void argp_error("const struct argp_state *STATE" "const char *FMT" "...")
void argp_failure("const struct argp_state *STATE" "int STATUS" "int ERRNUM" "const char *FMT" "...")
void argp_help("const struct argp *ARGP" "FILE *STREAM" "unsigned FLAGS" "char *NAME")
error_t argp_parse("const struct argp *ARGP" "int ARGC" "char **ARGV" "unsigned FLAGS" "int *ARG_INDEX" "void *INPUT")
void argp_state_help("const struct argp_state *STATE" "FILE *STREAM" "unsigned FLAGS")
void argp_usage("const struct argp_state *STATE")
error_t argz_add("char **ARGZ" "size_t *ARGZ_LEN" "const char *STR")
error_t argz_add_sep("char **ARGZ" "size_t *ARGZ_LEN" "const char *STR" "int DELIM")
error_t argz_append("char **ARGZ" "size_t *ARGZ_LEN" "const char *BUF" "size_t BUF_LEN")
size_t argz_count("const char *ARGZ" "size_t ARG_LEN")
error_t argz_create("char *const ARGV[]" "char **ARGZ" "size_t *ARGZ_LEN")
error_t argz_create_sep("const char *STRING" "int SEP" "char **ARGZ" "size_t *ARGZ_LEN")
error_t argz_delete("char **ARGZ" "size_t *ARGZ_LEN" "char *ENTRY")
void argz_extract("char *ARGZ" "size_t ARGZ_LEN" "char **ARGV")
error_t argz_insert("char **ARGZ" "size_t *ARGZ_LEN" "char *BEFORE" "const char *ENTRY")
char * argz_next("char *ARGZ" "size_t ARGZ_LEN" "const char *ENTRY")
error_t argz_replace("char **ARGZ" "size_t *ARGZ_LEN" "const char *STR" "const char *WITH" "unsigned *REPLACE_COUNT")
void argz_stringify("char *ARGZ" "size_t LEN" "int SEP")
char * asctime("const struct tm *BROKENTIME")
char * asctime_r("const struct tm *BROKENTIME" "char *BUFFER")
double asin("double X")
float asinf("float X")
double asinh("double X")
float asinhf("float X")
long double asinhl("long double X")
long double asinl("long double X")
int asprintf("char **PTR" "const char *TEMPLATE" "...")
void assert("int EXPRESSION")
void assert_perror("int ERRNUM")
double atan("double X")
double atan2("double Y" "double X")
float atan2f("float Y" "float X")
long double atan2l("long double Y" "long double X")
float atanf("float X")
double atanh("double X")
float atanhf("float X")
long double atanhl("long double X")
long double atanl("long double X")
double atof("const char *STRING")
int atoi("const char *STRING")
long int atol("const char *STRING")
long long int atoll("const char *STRING")
int backtrace("void **BUFFER" "int SIZE")
char ** backtrace_symbols("void *const *BUFFER" "int SIZE")
void backtrace_symbols_fd("void *const *BUFFER" "int SIZE" "int FD")
char * basename("char *PATH")
char * basename("const char *FILENAME")
int bcmp("const void *A1" "const void *A2" "size_t SIZE")
void bcopy("const void *FROM" "void *TO" "size_t SIZE")
int bind("int SOCKET" "struct sockaddr *ADDR" "socklen_t LENGTH")
char * bindtextdomain("const char *DOMAINNAME" "const char *DIRNAME")
char * bind_textdomain_codeset("const char *DOMAINNAME" "const char *CODESET")
int brk("void *ADDR")
void * bsearch("const void *KEY" "const void *ARRAY" "size_t COUNT" "size_t SIZE" "comparison_fn_t COMPARE")
wint_t btowc("int C")
void bzero("void *BLOCK" "size_t SIZE")
double cabs("complex double Z")
float cabsf("complex float Z")
long double cabsl("complex long double Z")
complex double cacos("complex double Z")
complex float cacosf("complex float Z")
complex double cacosh("complex double Z")
complex float cacoshf("complex float Z")
complex long double cacoshl("complex long double Z")
complex long double cacosl("complex long double Z")
void * calloc("size_t COUNT" "size_t ELTSIZE")
char * canonicalize_file_name("const char *NAME")
double carg("complex double Z")
float cargf("complex float Z")
long double cargl("complex long double Z")
complex double casin("complex double Z")
complex float casinf("complex float Z")
complex double casinh("complex double Z")
complex float casinhf("complex float Z")
complex long double casinhl("complex long double Z")
complex long double casinl("complex long double Z")
complex double catan("complex double Z")
complex float catanf("complex float Z")
complex double catanh("complex double Z")
complex float catanhf("complex float Z")
complex long double catanhl("complex long double Z")
complex long double catanl("complex long double Z")
nl_catd catopen("const char *CAT_NAME" "int FLAG")
int cbc_crypt("char *KEY" "char *BLOCKS" "unsigned LEN" "unsigned MODE" "char *IVEC")
double cbrt("double X")
float cbrtf("float X")
long double cbrtl("long double X")
complex double ccos("complex double Z")
complex float ccosf("complex float Z")
complex double ccosh("complex double Z")
complex float ccoshf("complex float Z")
complex long double ccoshl("complex long double Z")
complex long double ccosl("complex long double Z")
double ceil("double X")
float ceilf("float X")
long double ceill("long double X")
complex double cexp("complex double Z")
complex float cexpf("complex float Z")
complex long double cexpl("complex long double Z")
speed_t cfgetispeed("const struct termios *TERMIOS-P")
speed_t cfgetospeed("const struct termios *TERMIOS-P")
void cfmakeraw("struct termios *TERMIOS-P")
void cfree("void *PTR")
int cfsetispeed("struct termios *TERMIOS-P" "speed_t SPEED")
int cfsetospeed("struct termios *TERMIOS-P" "speed_t SPEED")
int cfsetspeed("struct termios *TERMIOS-P" "speed_t SPEED")
int chdir("const char *FILENAME")
int chmod("const char *FILENAME" "mode_t MODE")
int chown("const char *FILENAME" "uid_t OWNER" "gid_t GROUP")
double cimag("complex double Z")
float cimagf("complex float Z")
long double cimagl("complex long double Z")
int clearenv("void")
void clearerr("FILE *STREAM")
void clearerr_unlocked("FILE *STREAM")
clock_t clock("void")
complex double clog("complex double Z")
complex double clog10("complex double Z")
complex float clog10f("complex float Z")
complex long double clog10l("complex long double Z")
complex float clogf("complex float Z")
complex long double clogl("complex long double Z")
int close("int FILEDES")
int closedir("DIR *DIRSTREAM")
void closelog("void")
size_t confstr("int PARAMETER" "char *BUF" "size_t LEN")
complex double conj("complex double Z")
complex float conjf("complex float Z")
complex long double conjl("complex long double Z")
int connect("int SOCKET" "struct sockaddr *ADDR" "socklen_t LENGTH")
double copysign("double X" "double Y")
float copysignf("float X" "float Y")
long double copysignl("long double X" "long double Y")
double cos("double X")
float cosf("float X")
double cosh("double X")
float coshf("float X")
long double coshl("long double X")
long double cosl("long double X")
complex double cpow("complex double BASE" "complex double POWER")
complex float cpowf("complex float BASE" "complex float POWER")
complex long double cpowl("complex long double BASE" "complex long double POWER")
complex double cproj("complex double Z")
complex float cprojf("complex float Z")
complex long double cprojl("complex long double Z")
void CPU_CLR("int CPU" "cpu_set_t *SET")
int CPU_ISSET("int CPU" "const cpu_set_t *SET")
void CPU_SET("int CPU" "cpu_set_t *SET")
void CPU_ZERO("cpu_set_t *SET")
double creal("complex double Z")
float crealf("complex float Z")
long double creall("complex long double Z")
int creat("const char *FILENAME" "mode_t MODE")
int creat64("const char *FILENAME" "mode_t MODE")
char * crypt("const char *KEY" "const char *SALT")
char * crypt_r("const char *KEY" "const char *SALT" "struct crypt_data * DATA")
complex double csin("complex double Z")
complex float csinf("complex float Z")
complex double csinh("complex double Z")
complex float csinhf("complex float Z")
complex long double csinhl("complex long double Z")
complex long double csinl("complex long double Z")
complex double csqrt("complex double Z")
complex float csqrtf("complex float Z")
complex long double csqrtl("complex long double Z")
complex double ctan("complex double Z")
complex float ctanf("complex float Z")
complex double ctanh("complex double Z")
complex float ctanhf("complex float Z")
complex long double ctanhl("complex long double Z")
complex long double ctanl("complex long double Z")
char * ctermid("char *STRING")
char * ctime("const time_t *TIME")
char * ctime_r("const time_t *TIME" "char *BUFFER")
char * cuserid("char *STRING")
char * dcgettext("const char *DOMAINNAME" "const char *MSGID" "int CATEGORY")
char * dcngettext("const char *DOMAIN" "const char *MSGID1" "const char *MSGID2" "unsigned long int N" "int CATEGORY")
int DES_FAILED("int ERR")
void des_setparity("char *KEY")
char * dgettext("const char *DOMAINNAME" "const char *MSGID")
double difftime("time_t TIME1" "time_t TIME0")
int dirfd("DIR *DIRSTREAM")
char * dirname("char *PATH")
div_t div("int NUMERATOR" "int DENOMINATOR")
char * dngettext("const char *DOMAIN" "const char *MSGID1" "const char *MSGID2" "unsigned long int N")
double drand48("void")
int drand48_r("struct drand48_data *BUFFER" "double *RESULT")
double drem("double NUMERATOR" "double DENOMINATOR")
float dremf("float NUMERATOR" "float DENOMINATOR")
long double dreml("long double NUMERATOR" "long double DENOMINATOR")
mode_t DTTOIF("int DTYPE")
int dup("int OLD")
int dup2("int OLD" "int NEW")
int ecb_crypt("char *KEY" "char *BLOCKS" "unsigned LEN" "unsigned MODE")
char * ecvt("double VALUE" "int NDIGIT" "int *DECPT" "int *NEG")
int ecvt_r("double VALUE" "int NDIGIT" "int *DECPT" "int *NEG" "char *BUF" "size_t LEN")
void encrypt("char *BLOCK" "int EDFLAG")
void encrypt_r("char *BLOCK" "int EDFLAG" "struct crypt_data * DATA")
void endfsent("void")
void endgrent("void")
void endhostent("void")
int endmntent("FILE *STREAM")
void endnetent("void")
void endnetgrent("void")
void endprotoent("void")
void endpwent("void")
void endservent("void")
void endutent("void")
void endutxent("void")
error_t envz_add("char **ENVZ" "size_t *ENVZ_LEN" "const char *NAME" "const char *VALUE")
char * envz_entry("const char *ENVZ" "size_t ENVZ_LEN" "const char *NAME")
char * envz_get("const char *ENVZ" "size_t ENVZ_LEN" "const char *NAME")
error_t envz_merge("char **ENVZ" "size_t *ENVZ_LEN" "const char *ENVZ2" "size_t ENVZ2_LEN" "int OVERRIDE")
void envz_strip("char **ENVZ" "size_t *ENVZ_LEN")
double erand48("unsigned short int XSUBI[3]")
int erand48_r("unsigned short int XSUBI[3]" "struct drand48_data *BUFFER" "double *RESULT")
double erf("double X")
double erfc("double X")
float erfcf("float X")
long double erfcl("long double X")
float erff("float X")
long double erfl("long double X")
void err("int STATUS" "const char *FORMAT" "...")
void error("int STATUS" "int ERRNUM" "const char *FORMAT" "...")
void error_at_line("int STATUS" "int ERRNUM" "const char *FNAME" "unsigned int LINENO" "const char *FORMAT" "...")
void errx("int STATUS" "const char *FORMAT" "...")
int execl("const char *FILENAME" "const char *ARG0" "...")
int execle("const char *FILENAME" "const char *ARG0" "char *const ENV[]" "...")
int execlp("const char *FILENAME" "const char *ARG0" "...")
int execv("const char *FILENAME" "char *const ARGV[]")
int execve("const char *FILENAME" "char *const ARGV[]" "char *const ENV[]")
int execvp("const char *FILENAME" "char *const ARGV[]")
void _Exit("int STATUS")
void _exit("int STATUS")
void exit("int STATUS")
double exp("double X")
double exp10("double X")
float exp10f("float X")
long double exp10l("long double X")
double exp2("double X")
float exp2f("float X")
long double exp2l("long double X")
float expf("float X")
long double expl("long double X")
double expm1("double X")
float expm1f("float X")
long double expm1l("long double X")
double fabs("double NUMBER")
float fabsf("float NUMBER")
long double fabsl("long double NUMBER")
size_t __fbufsize("FILE *STREAM")
int fchdir("int FILEDES")
int fchmod("int FILEDES" "int MODE")
int fchown("int FILEDES" "int OWNER" "int GROUP")
int fclean("FILE *STREAM")
int fclose("FILE *STREAM")
int fcloseall("void")
int fcntl("int FILEDES" "int COMMAND" "...")
char * fcvt("double VALUE" "int NDIGIT" "int *DECPT" "int *NEG")
int fcvt_r("double VALUE" "int NDIGIT" "int *DECPT" "int *NEG" "char *BUF" "size_t LEN")
int fdatasync("int FILDES")
void FD_CLR("int FILEDES" "fd_set *SET")
double fdim("double X" "double Y")
float fdimf("float X" "float Y")
long double fdiml("long double X" "long double Y")
int FD_ISSET("int FILEDES" "const fd_set *SET")
FILE * fdopen("int FILEDES" "const char *OPENTYPE")
void FD_SET("int FILEDES" "fd_set *SET")
void FD_ZERO("fd_set *SET")
int feclearexcept("int EXCEPTS")
int fedisableexcept("int EXCEPTS")
int feenableexcept("int EXCEPTS")
int fegetenv("fenv_t *ENVP")
int fegetexcept("int EXCEPTS")
int fegetexceptflag("fexcept_t *FLAGP" "int EXCEPTS")
int fegetround("void")
int feholdexcept("fenv_t *ENVP")
int feof("FILE *STREAM")
int feof_unlocked("FILE *STREAM")
int feraiseexcept("int EXCEPTS")
int ferror("FILE *STREAM")
int ferror_unlocked("FILE *STREAM")
int fesetenv("const fenv_t *ENVP")
int fesetround("int ROUND")
int fetestexcept("int EXCEPTS")
int feupdateenv("const fenv_t *ENVP")
int fflush("FILE *STREAM")
int fflush_unlocked("FILE *STREAM")
int fgetc("FILE *STREAM")
int fgetc_unlocked("FILE *STREAM")
struct group * fgetgrent("FILE *STREAM")
int fgetgrent_r("FILE *STREAM" "struct group *RESULT_BUF" "char *BUFFER" "size_t BUFLEN" "struct group **RESULT")
int fgetpos("FILE *STREAM" "fpos_t *POSITION")
int fgetpos64("FILE *STREAM" "fpos64_t *POSITION")
struct passwd * fgetpwent("FILE *STREAM")
int fgetpwent_r("FILE *STREAM" "struct passwd *RESULT_BUF" "char *BUFFER" "size_t BUFLEN" "struct passwd **RESULT")
char * fgets("char *S" "int COUNT" "FILE *STREAM")
char * fgets_unlocked("char *S" "int COUNT" "FILE *STREAM")
wint_t fgetwc("FILE *STREAM")
wint_t fgetwc_unlocked("FILE *STREAM")
wchar_t * fgetws("wchar_t *WS" "int COUNT" "FILE *STREAM")
wchar_t * fgetws_unlocked("wchar_t *WS" "int COUNT" "FILE *STREAM")
int fileno("FILE *STREAM")
int fileno_unlocked("FILE *STREAM")
int finite("double X")
int finitef("float X")
int finitel("long double X")
int __flbf("FILE *STREAM")
void flockfile("FILE *STREAM")
double floor("double X")
float floorf("float X")
long double floorl("long double X")
void _flushlbf("void")
double fma("double X" "double Y" "double Z")
float fmaf("float X" "float Y" "float Z")
long double fmal("long double X" "long double Y" "long double Z")
double fmax("double X" "double Y")
float fmaxf("float X" "float Y")
long double fmaxl("long double X" "long double Y")
FILE * fmemopen("void *BUF" "size_t SIZE" "const char *OPENTYPE")
double fmin("double X" "double Y")
float fminf("float X" "float Y")
long double fminl("long double X" "long double Y")
double fmod("double NUMERATOR" "double DENOMINATOR")
float fmodf("float NUMERATOR" "float DENOMINATOR")
long double fmodl("long double NUMERATOR" "long double DENOMINATOR")
int fmtmsg("long int CLASSIFICATION" "const char *LABEL" "int SEVERITY" "const char *TEXT" "const char *ACTION" "const char *TAG")
int fnmatch("const char *PATTERN" "const char *STRING" "int FLAGS")
FILE * fopen("const char *FILENAME" "const char *OPENTYPE")
FILE * fopen64("const char *FILENAME" "const char *OPENTYPE")
FILE * fopencookie("void *COOKIE" "const char *OPENTYPE" "cookie_io_functions_t IO-FUNCTIONS")
pid_t fork("void")
int forkpty("int *AMASTER" "char *NAME" "struct termios *TERMP" "struct winsize *WINP")
long int fpathconf("int FILEDES" "int PARAMETER")
int fpclassify("_float-type_ X")
size_t __fpending("FILE *STREAM") The __fpending
int fprintf("FILE *STREAM" "const char *TEMPLATE" "...")
void __fpurge("FILE *STREAM")
int fputc("int C" "FILE *STREAM")
int fputc_unlocked("int C" "FILE *STREAM")
int fputs("const char *S" "FILE *STREAM")
int fputs_unlocked("const char *S" "FILE *STREAM")
wint_t fputwc("wchar_t WC" "FILE *STREAM")
wint_t fputwc_unlocked("wint_t WC" "FILE *STREAM")
int fputws("const wchar_t *WS" "FILE *STREAM")
int fputws_unlocked("const wchar_t *WS" "FILE *STREAM")
size_t fread("void *DATA" "size_t SIZE" "size_t COUNT" "FILE *STREAM")
int __freadable("FILE *STREAM")
int __freading("FILE *STREAM")
size_t fread_unlocked("void *DATA" "size_t SIZE" "size_t COUNT" "FILE *STREAM")
void free("void *PTR")
FILE * freopen("const char *FILENAME" "const char *OPENTYPE" "FILE *STREAM")
FILE * freopen64("const char *FILENAME" "const char *OPENTYPE" "FILE *STREAM")
double frexp("double VALUE" "int *EXPONENT")
float frexpf("float VALUE" "int *EXPONENT")
long double frexpl("long double VALUE" "int *EXPONENT")
int fscanf("FILE *STREAM" "const char *TEMPLATE" "...")
int fseek("FILE *STREAM" "long int OFFSET" "int WHENCE")
int fseeko("FILE *STREAM" "off_t OFFSET" "int WHENCE")
int fseeko64("FILE *STREAM" "off64_t OFFSET" "int WHENCE")
int __fsetlocking("FILE *STREAM" "int TYPE")
int fsetpos("FILE *STREAM" "const fpos_t *POSITION")
int fsetpos64("FILE *STREAM" "const fpos64_t *POSITION")
int fstat("int FILEDES" "struct stat *BUF")
int fstat64("int FILEDES" "struct stat64 *BUF")
int fsync("int FILDES")
long int ftell("FILE *STREAM")
off_t ftello("FILE *STREAM")
off64_t ftello64("FILE *STREAM")
int ftruncate("int FD" "off_t LENGTH")
int ftruncate64("int ID" "off64_t LENGTH")
int ftrylockfile("FILE *STREAM")
int ftw("const char *FILENAME" "__ftw_func_t FUNC" "int DESCRIPTORS")
int ftw64("const char *FILENAME" "__ftw64_func_t FUNC" "int DESCRIPTORS")
void funlockfile("FILE *STREAM")
int futimes("int *FD" "struct timeval TVP[2]")
int fwide("FILE *STREAM" "int MODE")
int fwprintf("FILE *STREAM" "const wchar_t *TEMPLATE" "...")
int __fwritable("FILE *STREAM")
size_t fwrite("const void *DATA" "size_t SIZE" "size_t COUNT" "FILE *STREAM")
size_t fwrite_unlocked("const void *DATA" "size_t SIZE" "size_t COUNT" "FILE *STREAM")
int __fwriting("FILE *STREAM")
int fwscanf("FILE *STREAM" "const wchar_t *TEMPLATE" "...")
double gamma("double X")
float gammaf("float X")
long double gammal("long double X")
char * gcvt("double VALUE" "int NDIGIT" "char *BUF")
long int get_avphys_pages("void")
int getc("FILE *STREAM")
int getchar("void")
int getchar_unlocked("void")
int getcontext("ucontext_t *UCP")
int getc_unlocked("FILE *STREAM")
char * get_current_dir_name("void")
char * getcwd("char *BUFFER" "size_t SIZE")
struct tm * getdate("const char *STRING")
int getdate_r("const char *STRING" "struct tm *TP")
ssize_t getdelim("char **LINEPTR" "size_t *N" "int DELIMITER" "FILE *STREAM")
int getdomainnname("char *NAME" "size_t LENGTH")
gid_t getegid("void")
char * getenv("const char *NAME")
uid_t geteuid("void")
struct fstab * getfsent("void")
struct fstab * getfsfile("const char *NAME")
struct fstab * getfsspec("const char *NAME")
gid_t getgid("void")
struct group * getgrent("void")
int getgrent_r("struct group *RESULT_BUF" "char *BUFFER" "size_t BUFLEN" "struct group **RESULT")
struct group * getgrgid("gid_t GID")
int getgrgid_r("gid_t GID" "struct group *RESULT_BUF" "char *BUFFER" "size_t BUFLEN" "struct group **RESULT")
struct group * getgrnam("const char *NAME")
int getgrnam_r("const char *NAME" "struct group *RESULT_BUF" "char *BUFFER" "size_t BUFLEN" "struct group **RESULT")
int getgrouplist("const char *USER" "gid_t GROUP" "gid_t *GROUPS" "int *NGROUPS")
int getgroups("int COUNT" "gid_t *GROUPS")
struct hostent * gethostbyaddr("const char *ADDR" "size_t LENGTH" "int FORMAT")
int gethostbyaddr_r("const char *ADDR" "size_t LENGTH" "int FORMAT" "struct hostent *restrict RESULT_BUF" "char *restrict BUF" "size_t BUFLEN" "struct hostent **restrict RESULT" "int *restrict H_ERRNOP")
struct hostent * gethostbyname("const char *NAME")
struct hostent * gethostbyname2("const char *NAME" "int AF")
int gethostbyname2_r("const char *NAME" "int AF" "struct hostent *restrict RESULT_BUF" "char *restrict BUF" "size_t BUFLEN" "struct hostent **restrict RESULT" "int *restrict H_ERRNOP")
int gethostbyname_r("const char *restrict NAME" "struct hostent *restrict RESULT_BUF" "char *restrict BUF" "size_t BUFLEN" "struct hostent **restrict RESULT" "int *restrict H_ERRNOP")
struct hostent * gethostent("void")
long int gethostid("void")
int gethostname("char *NAME" "size_t SIZE")
int getitimer("int WHICH" "struct itimerval *OLD")
ssize_t getline("char **LINEPTR" "size_t *N" "FILE *STREAM")
int getloadavg("double LOADAVG[]" "int NELEM")
char * getlogin("void")
struct mntent * getmntent("FILE *STREAM")
struct mntent * getmntent_r("FILE *STREAM" "struct mentent *RESULT" "char *BUFFER" "int BUFSIZE")
struct netent * getnetbyaddr("unsigned long int NET" "int TYPE")
struct netent * getnetbyname("const char *NAME")
struct netent * getnetent("void")
int getnetgrent("char **HOSTP" "char **USERP" "char **DOMAINP")
int getnetgrent_r("char **HOSTP" "char **USERP" "char **DOMAINP" "char *BUFFER" "int BUFLEN")
int get_nprocs("void")
int get_nprocs_conf("void")
int getopt("int ARGC" "char **ARGV" "const char *OPTIONS")
int getopt_long("int ARGC" "char *const *ARGV" "const char *SHORTOPTS" "const struct option *LONGOPTS" "int *INDEXPTR")
int getopt_long_only("int ARGC" "char *const *ARGV" "const char *SHORTOPTS" "const struct option *LONGOPTS" "int *INDEXPTR")
int getpagesize("void")
char * getpass("const char *PROMPT")
int getpeername("int SOCKET" "struct sockaddr *ADDR" "socklen_t *LENGTH-PTR")
int getpgid("pid_t PID")
pid_t getpgrp("pid_t PID")
pid_t getpgrp("void")
long int get_phys_pages("void")
pid_t getpid("void")
pid_t getppid("void")
int getpriority("int CLASS" "int ID")
struct protoent * getprotobyname("const char *NAME")
struct protoent * getprotobynumber("int PROTOCOL")
struct protoent * getprotoent("void")
int getpt("void")
struct passwd * getpwent("void")
int getpwent_r("struct passwd *RESULT_BUF" "char *BUFFER" "int BUFLEN" "struct passwd **RESULT")
struct passwd * getpwnam("const char *NAME")
int getpwnam_r("const char *NAME" "struct passwd *RESULT_BUF" "char *BUFFER" "size_t BUFLEN" "struct passwd **RESULT")
struct passwd * getpwuid("uid_t UID")
int getpwuid_r("uid_t UID" "struct passwd *RESULT_BUF" "char *BUFFER" "size_t BUFLEN" "struct passwd **RESULT")
int getrlimit("int RESOURCE" "struct rlimit *RLP")
int getrlimit64("int RESOURCE" "struct rlimit64 *RLP")
int getrusage("int PROCESSES" "struct rusage *RUSAGE")
char * gets("char *S")
struct servent * getservbyname("const char *NAME" "const char *PROTO")
struct servent * getservbyport("int PORT" "const char *PROTO")
struct servent * getservent("void")
pid_t getsid("pid_t PID")
int getsockname("int SOCKET" "struct sockaddr *ADDR" "socklen_t *LENGTH-PTR")
int getsockopt("int SOCKET" "int LEVEL" "int OPTNAME" "void *OPTVAL" "socklen_t *OPTLEN-PTR")
int getsubopt("char **OPTIONP" "const char* const *TOKENS" "char **VALUEP")
char * gettext("const char *MSGID")
int gettimeofday("struct timeval *TP" "struct timezone *TZP")
uid_t getuid("void")
mode_t getumask("void")
struct utmp * getutent("void")
int getutent_r("struct utmp *BUFFER" "struct utmp **RESULT")
struct utmp * getutid("const struct utmp *ID")
int getutid_r("const struct utmp *ID" "struct utmp *BUFFER" "struct utmp **RESULT")
struct utmp * getutline("const struct utmp *LINE")
int getutline_r("const struct utmp *LINE" "struct utmp *BUFFER" "struct utmp **RESULT")
int getutmp("const struct utmpx *utmpx" "struct utmp *utmp")
int getutmpx("const struct utmp *utmp" "struct utmpx *utmpx")
struct utmpx * getutxent("void")
struct utmpx * getutxid("const struct utmpx *ID")
struct utmpx * getutxline("const struct utmpx *LINE")
int getw("FILE *STREAM")
wint_t getwc("FILE *STREAM")
wint_t getwchar("void")
wint_t getwchar_unlocked("void")
wint_t getwc_unlocked("FILE *STREAM")
char * getwd("char *BUFFER")
int glob("const char *PATTERN" "int FLAGS" "int("*ERRFUNC")("const char *FILENAME" "int ERROR-CODE")" "glob_t *VECTOR-PTR")
int glob64("const char *PATTERN" "int FLAGS" "int("*ERRFUNC")("const char *FILENAME" "int ERROR-CODE")" "glob64_t *VECTOR-PTR")
void globfree("glob_t *PGLOB")
void globfree64("glob64_t *PGLOB")
struct tm * gmtime("const time_t *TIME")
struct tm * gmtime_r("const time_t *TIME" "struct tm *RESULTP")
int grantpt("int FILEDES")
int gsignal("int SIGNUM")
int gtty("int FILEDES" "struct sgttyb *ATTRIBUTES")
char * hasmntopt("const struct mntent *MNT" "const char *OPT")
int hcreate("size_t NEL")
int hcreate_r("size_t NEL" "struct hsearch_data *HTAB")
void hdestroy("void")
void hdestroy_r("struct hsearch_data *HTAB")
ENTRY * hsearch("ENTRY ITEM" "ACTION ACTION")
int hsearch_r("ENTRY ITEM" "ACTION ACTION" "ENTRY **RETVAL" "struct hsearch_data *HTAB")
uint32_t htonl("uint32_t HOSTLONG")
uint16_t htons("uint16_t HOSTSHORT")
double hypot("double X" "double Y")
float hypotf("float X" "float Y")
long double hypotl("long double X" "long double Y")
size_t iconv("iconv_t CD" "char **INBUF" "size_t *INBYTESLEFT" "char **OUTBUF" "size_t *OUTBYTESLEFT")
int iconv_close("iconv_t CD")
iconv_t iconv_open("const char *TOCODE" "const char *FROMCODE")
void if_freenameindex("struct if_nameindex *ptr")
char * if_indextoname("unsigned int ifindex" "char *ifname")
struct if_nameindex * if_nameindex("void")
unsigned int if_nametoindex("const char *ifname")
int IFTODT("mode_t MODE")
int ilogb("double X")
int ilogbf("float X")
int ilogbl("long double X")
intmax_t imaxabs("intmax_t NUMBER")
imaxdiv_t imaxdiv("intmax_t NUMERATOR" "intmax_t DENOMINATOR")
char * index("const char *STRING" "int C")
uint32_t inet_addr("const char *NAME")
int inet_aton("const char *NAME" "struct in_addr *ADDR")
uint32_t inet_lnaof("struct in_addr ADDR")
struct in_addr inet_makeaddr("uint32_t NET" "uint32_t LOCAL")
uint32_t inet_netof("struct in_addr ADDR")
uint32_t inet_network("const char *NAME")
char * inet_ntoa("struct in_addr ADDR")
const char * inet_ntop("int AF" "const void *CP" "char *BUF" "size_t LEN")
int inet_pton("int AF" "const char *CP" "void *BUF")
int initgroups("const char *USER" "gid_t GROUP")
void * initstate("unsigned int SEED" "void *STATE" "size_t SIZE")
int initstate_r("unsigned int SEED" "char *restrict STATEBUF" "size_t STATELEN" "struct random_data *restrict BUF")
int innetgr("const char *NETGROUP" "const char *HOST" "const char *USER" "const char *DOMAIN")
int ioctl("int FILEDES" "int COMMAND" "...")
int isalnum("int C")
int isalpha("int C")
int isascii("int C")
int isatty("int FILEDES")
int isblank("int C")
int iscntrl("int C")
int isdigit("int C")
int isfinite("_float-type_ X")
int isgraph("int C")
int isgreater("_real-floating_ X" "_real-floating_ Y")
int isgreaterequal("_real-floating_ X" "_real-floating_ Y")
int isinf("double X")
int isinff("float X")
int isinfl("long double X")
int isless("_real-floating_ X" "_real-floating_ Y")
int islessequal("_real-floating_ X" "_real-floating_ Y")
int islessgreater("_real-floating_ X" "_real-floating_ Y")
int islower("int C")
int isnan("_float-type_ X")
int isnan("double X")
int isnanf("float X")
int isnanl("long double X")
int isnormal("_float-type_ X")
int isprint("int C")
int ispunct("int C")
int isspace("int C")
int isunordered("_real-floating_ X" "_real-floating_ Y")
int isupper("int C")
int iswalnum("wint_t WC")
int iswalpha("wint_t WC")
int iswblank("wint_t WC")
int iswcntrl("wint_t WC")
int iswctype("wint_t WC" "wctype_t DESC")
int iswdigit("wint_t WC")
int iswgraph("wint_t WC")
int iswlower("wint_t WC")
int iswprint("wint_t WC")
int iswpunct("wint_t WC")
int iswspace("wint_t WC")
int iswupper("wint_t WC")
int iswxdigit("wint_t WC")
int isxdigit("int C")
double j0("double X")
float j0f("float X")
long double j0l("long double X")
double j1("double X")
float j1f("float X")
long double j1l("long double X")
double jn("int n" "double X")
float jnf("int n" "float X")
long double jnl("int n" "long double X")
long int jrand48("unsigned short int XSUBI[3]")
int jrand48_r("unsigned short int XSUBI[3]" "struct drand48_data *BUFFER" "long int *RESULT")
int kill("pid_t PID" "int SIGNUM")
int killpg("int PGID" "int SIGNUM")
char * l64a("long int N")
long int labs("long int NUMBER")
void lcong48("unsigned short int PARAM[7]")
int lcong48_r("unsigned short int PARAM[7]" "struct drand48_data *BUFFER")
double ldexp("double VALUE" "int EXPONENT")
float ldexpf("float VALUE" "int EXPONENT")
long double ldexpl("long double VALUE" "int EXPONENT")
ldiv_t ldiv("long int NUMERATOR" "long int DENOMINATOR")
void * lfind("const void *KEY" "void *BASE" "size_t *NMEMB" "size_t SIZE" "comparison_fn_t COMPAR")
double lgamma("double X")
float lgammaf("float X")
float lgammaf_r("float X" "int *SIGNP")
long double lgammal("long double X")
long double lgammal_r("long double X" "int *SIGNP")
double lgamma_r("double X" "int *SIGNP")
int link("const char *OLDNAME" "const char *NEWNAME")
int lio_listio("int MODE" "struct aiocb *const LIST[]" "int NENT" "struct sigevent *SIG")
int lio_listio64("int MODE" "struct aiocb *const LIST" "int NENT" "struct sigevent *SIG")
int listen("int SOCKET" "unsigned int N")
long long int llabs("long long int NUMBER")
lldiv_t lldiv("long long int NUMERATOR" "long long int DENOMINATOR")
long long int llrint("double X")
long long int llrintf("float X")
long long int llrintl("long double X")
long long int llround("double X")
long long int llroundf("float X")
long long int llroundl("long double X")
struct lconv * localeconv("void")
struct tm * localtime("const time_t *TIME")
struct tm * localtime_r("const time_t *TIME" "struct tm *RESULTP")
double log("double X")
double log10("double X")
float log10f("float X")
long double log10l("long double X")
double log1p("double X")
float log1pf("float X")
long double log1pl("long double X")
double log2("double X")
float log2f("float X")
long double log2l("long double X")
double logb("double X")
float logbf("float X")
long double logbl("long double X")
float logf("float X")
void login("const struct utmp *ENTRY")
int login_tty("int FILEDES")
long double logl("long double X")
int logout("const char *UT_LINE")
void logwtmp("const char *UT_LINE" "const char *UT_NAME" "const char *UT_HOST")
void longjmp("jmp_buf STATE" "int VALUE")
long int lrand48("void")
int lrand48_r("struct drand48_data *BUFFER" "double *RESULT")
long int lrint("double X")
long int lrintf("float X")
long int lrintl("long double X")
long int lround("double X")
long int lroundf("float X")
long int lroundl("long double X")
void * lsearch("const void *KEY" "void *BASE" "size_t *NMEMB" "size_t SIZE" "comparison_fn_t COMPAR")
off_t lseek("int FILEDES" "off_t OFFSET" "int WHENCE")
off64_t lseek64("int FILEDES" "off64_t OFFSET" "int WHENCE")
int lstat("const char *FILENAME" "struct stat *BUF")
int lstat64("const char *FILENAME" "struct stat64 *BUF")
int lutimes("const char *FILENAME" "struct timeval TVP[2]")
int madvise("void *ADDR" "size_t LENGTH" "int ADVICE")
void makecontext("ucontext_t *UCP" "void("*FUNC")("void")" "int ARGC" "...")
struct mallinfo mallinfo("void")
void * malloc("size_t SIZE")
int mblen("const char *STRING" "size_t SIZE")
size_t mbrlen("const char *restrict S" "size_t N" "mbstate_t *PS")
size_t mbrtowc("wchar_t *restrict PWC" "const char *restrict S" "size_t N" "mbstate_t *restrict PS")
int mbsinit("const mbstate_t *PS")
size_t mbsnrtowcs("wchar_t *restrict DST" "const char **restrict SRC" "size_t NMC" "size_t LEN" "mbstate_t *restrict PS")
size_t mbsrtowcs("wchar_t *restrict DST" "const char **restrict SRC" "size_t LEN" "mbstate_t *restrict PS")
size_t mbstowcs("wchar_t *WSTRING" "const char *STRING" "size_t SIZE")
int mbtowc("wchar_t *restrict RESULT" "const char *restrict STRING" "size_t SIZE")
int mcheck("void("*ABORTFN")("enum mcheck_status STATUS")")
void * memalign("size_t BOUNDARY" "size_t SIZE")
void * memccpy("void *restrict TO" "const void *restrict FROM" "int C" "size_t SIZE")
void * memchr("const void *BLOCK" "int C" "size_t SIZE")
int memcmp("const void *A1" "const void *A2" "size_t SIZE")
void * memcpy("void *restrict TO" "const void *restrict FROM" "size_t SIZE")
void * memfrob("void *MEM" "size_t LENGTH")
void * memmove("void *TO" "const void *FROM" "size_t SIZE")
void * mempcpy("void *restrict TO" "const void *restrict FROM" "size_t SIZE")
void * memrchr("const void *BLOCK" "int C" "size_t SIZE")
void * memset("void *BLOCK" "int C" "size_t SIZE")
int mkdir("const char *FILENAME" "mode_t MODE")
char * mkdtemp("char *TEMPLATE")
int mkfifo("const char *FILENAME" "mode_t MODE")
int mknod("const char *FILENAME" "int MODE" "int DEV")
int mkstemp("char *TEMPLATE")
char * mktemp("char *TEMPLATE")
time_t mktime("struct tm *BROKENTIME")
int mlock("const void *ADDR" "size_t LEN")
int mlockall("int FLAGS")
void * mmap("void *ADDRESS" "size_t LENGTH" "int PROTECT" "int FLAGS" "int FILEDES" "off_t OFFSET")
void * mmap64("void *ADDRESS" "size_t LENGTH" "int PROTECT" "int FLAGS" "int FILEDES" "off64_t OFFSET")
double modf("double VALUE" "double *INTEGER-PART")
float modff("float VALUE" "float *INTEGER-PART")
long double modfl("long double VALUE" "long double *INTEGER-PART")
int mount("const char *SPECIAL_FILE" "const char *DIR" "const char *FSTYPE" "unsigned long int OPTIONS" "const void *DATA")
long int mrand48("void")
int mrand48_r("struct drand48_data *BUFFER" "double *RESULT")
void * mremap("void *ADDRESS" "size_t LENGTH" "size_t NEW_LENGTH" "int FLAG")
int msync("void *ADDRESS" "size_t LENGTH" "int FLAGS")
void mtrace("void")
int munlock("const void *ADDR" "size_t LEN")
int munlockall("void")
int munmap("void *ADDR" "size_t LENGTH")
void muntrace("void")
double nan("const char *TAGP")
float nanf("const char *TAGP")
long double nanl("const char *TAGP")
int nanosleep("const struct timespec *REQUESTED_TIME" "struct timespec *REMAINING")
double nearbyint("double X")
float nearbyintf("float X")
long double nearbyintl("long double X")
double nextafter("double X" "double Y")
float nextafterf("float X" "float Y")
long double nextafterl("long double X" "long double Y")
double nexttoward("double X" "long double Y")
float nexttowardf("float X" "long double Y")
long double nexttowardl("long double X" "long double Y")
int nftw("const char *FILENAME" "__nftw_func_t FUNC" "int DESCRIPTORS" "int FLAG")
int nftw64("const char *FILENAME" "__nftw64_func_t FUNC" "int DESCRIPTORS" "int FLAG")
char * ngettext("const char *MSGID1" "const char *MSGID2" "unsigned long int N")
int nice("int INCREMENT")
char * nl_langinfo("nl_item ITEM")
long int nrand48("unsigned short int XSUBI[3]")
int nrand48_r("unsigned short int XSUBI[3]" "struct drand48_data *BUFFER" "long int *RESULT")
uint32_t ntohl("uint32_t NETLONG")
uint16_t ntohs("uint16_t NETSHORT")
int ntp_adjtime("struct timex *TPTR")
int ntp_gettime("struct ntptimeval *TPTR")
void obstack_1grow("struct obstack *OBSTACK-PTR" "char C")
void obstack_1grow_fast("struct obstack *OBSTACK-PTR" "char C")
int obstack_alignment_mask("struct obstack *OBSTACK-PTR")
void * obstack_alloc("struct obstack *OBSTACK-PTR" "int SIZE")
void * obstack_base("struct obstack *OBSTACK-PTR")
void obstack_blank("struct obstack *OBSTACK-PTR" "int SIZE")
void obstack_blank_fast("struct obstack *OBSTACK-PTR" "int SIZE")
int obstack_chunk_size("struct obstack *OBSTACK-PTR")
void * obstack_copy("struct obstack *OBSTACK-PTR" "void *ADDRESS" "int SIZE")
void * obstack_copy0("struct obstack *OBSTACK-PTR" "void *ADDRESS" "int SIZE")
void * obstack_finish("struct obstack *OBSTACK-PTR")
void obstack_free("struct obstack *OBSTACK-PTR" "void *OBJECT")
void obstack_grow("struct obstack *OBSTACK-PTR" "void *DATA" "int SIZE")
void obstack_grow0("struct obstack *OBSTACK-PTR" "void *DATA" "int SIZE")
int obstack_init("struct obstack *OBSTACK-PTR")
void obstack_int_grow("struct obstack *OBSTACK-PTR" "int DATA")
void obstack_int_grow_fast("struct obstack *OBSTACK-PTR" "int DATA")
void * obstack_next_free("struct obstack *OBSTACK-PTR")
int obstack_object_size("struct obstack *OBSTACK-PTR")
int obstack_object_size("struct obstack *OBSTACK-PTR")
int obstack_printf("struct obstack *OBSTACK" "const char *TEMPLATE" "...")
void obstack_ptr_grow("struct obstack *OBSTACK-PTR" "void *DATA")
void obstack_ptr_grow_fast("struct obstack *OBSTACK-PTR" "void *DATA")
int obstack_room("struct obstack *OBSTACK-PTR")
int obstack_vprintf("struct obstack *OBSTACK" "const char *TEMPLATE" "va_list AP")
size_t offsetof("TYPE" "MEMBER")
int on_exit("void("*FUNCTION")("int STATUS" "void *ARG")" "void *ARG")
int open("const char *FILENAME" "int FLAGS[" "mode_t MODE]")
int open64("const char *FILENAME" "int FLAGS[" "mode_t MODE]")
DIR * opendir("const char *DIRNAME")
void openlog("const char *IDENT" "int OPTION" "int FACILITY")
FILE * open_memstream("char **PTR" "size_t *SIZELOC")
FILE * open_obstack_stream("struct obstack *OBSTACK")
int openpty("int *AMASTER" "int *ASLAVE" "char *NAME" "struct termios *TERMP" "struct winsize *WINP")
size_t parse_printf_format("const char *TEMPLATE" "size_t N" "int *ARGTYPES")
long int pathconf("const char *FILENAME" "int PARAMETER")
int pause("")
int pclose("FILE *STREAM")
void perror("const char *MESSAGE")
int pipe("int FILEDES[2]")
FILE * popen("const char *COMMAND" "const char *MODE")
int posix_memalign("void **MEMPTR" "size_t ALIGNMENT" "size_t SIZE")
double pow("double BASE" "double POWER")
double pow10("double X")
float pow10f("float X")
long double pow10l("long double X")
float powf("float BASE" "float POWER")
long double powl("long double BASE" "long double POWER")
ssize_t pread("int FILEDES" "void *BUFFER" "size_t SIZE" "off_t OFFSET")
ssize_t pread64("int FILEDES" "void *BUFFER" "size_t SIZE" "off64_t OFFSET")
int printf("const char *TEMPLATE" "...")
int printf_size("FILE *FP" "const struct printf_info *INFO" "const void *const *ARGS")
int printf_size_info("const struct printf_info *INFO" "size_t N" "int *ARGTYPES")
void psignal("int SIGNUM" "const char *MESSAGE")
int pthread_atfork("void("*PREPARE")("void")" "void("*PARENT")("void")" "void("*CHILD")("void")")
int pthread_attr_destroy("pthread_attr_t *ATTR")
int pthread_attr_getattr("const pthread_attr_t *OBJ" "int *VALUE")
int pthread_attr_init("pthread_attr_t *ATTR")
int pthread_attr_setattr("pthread_attr_t *OBJ" "int VALUE")
int pthread_cancel("pthread_t THREAD")
void pthread_cleanup_pop("int EXECUTE")
void pthread_cleanup_pop_restore_np("int EXECUTE")
void pthread_cleanup_push("void("*ROUTINE")("void *")" "void *ARG")
void pthread_cleanup_push_defer_np("void("*ROUTINE")("void *")" "void *ARG")
int pthread_condattr_init("pthread_condattr_t *ATTR")
int pthread_cond_broadcast("pthread_cond_t *COND")
int pthread_cond_destroy("pthread_cond_t *COND")
int pthread_cond_init("pthread_cond_t *COND" "pthread_condattr_t *cond_ATTR")
int pthread_cond_signal("pthread_cond_t *COND")
int pthread_cond_timedwait("pthread_cond_t *COND" "pthread_mutex_t *MUTEX" "const struct timespec *ABSTIME")
int pthread_cond_wait("pthread_cond_t *COND" "pthread_mutex_t *MUTEX")
int pthread_create("pthread_t * THREAD" "pthread_attr_t * ATTR" "void *("*START_ROUTINE")("void *")" "void * ARG")
int pthread_detach("pthread_t TH")
int pthread_equal("pthread_t thread1" "pthread_t thread2")
void pthread_exit("void *RETVAL")
int pthread_getconcurrency("")
int pthread_getschedparam("pthread_t target_THREAD" "int *POLICY" "struct sched_param *PARAM")
void * pthread_getspecific("pthread_key_t KEY")
int pthread_join("pthread_t TH" "void **thread_RETURN")
int pthread_key_create("pthread_key_t *KEY" "void("*destr_function")("void *")")
int pthread_key_delete("pthread_key_t KEY")
int pthread_kill("pthread_t THREAD" "int SIGNO")
void pthread_kill_other_threads_np("VOID")
int pthread_mutexattr_destroy("pthread_mutexattr_t *ATTR")
int pthread_mutexattr_gettype("const pthread_mutexattr_t *ATTR" "int *TYPE")
int pthread_mutexattr_init("pthread_mutexattr_t *ATTR")
int pthread_mutexattr_settype("pthread_mutexattr_t *ATTR" "int TYPE")
int pthread_mutex_destroy("pthread_mutex_t *MUTEX")
int pthread_mutex_init("pthread_mutex_t *MUTEX" "const pthread_mutexattr_t *MUTEXATTR")
int pthread_mutex_lock("pthread_mutex_t *mutex")")
int pthread_mutex_timedlock("pthread_mutex_t *MUTEX" "const struct timespec *ABSTIME")
int pthread_mutex_trylock("pthread_mutex_t *MUTEX")
int pthread_mutex_unlock("pthread_mutex_t *MUTEX")
int pthread_once("pthread_once_t *once_CONTROL" "void("*INIT_ROUTINE")("void")")
pthread_t pthread_self("VOID")
int pthread_setcancelstate("int STATE" "int *OLDSTATE")
int pthread_setcanceltype("int TYPE" "int *OLDTYPE")
int pthread_setconcurrency("int LEVEL")
int pthread_setschedparam("pthread_t target_THREAD" "int POLICY" "const struct sched_param *PARAM")
int pthread_setspecific("pthread_key_t KEY" "const void *POINTER")
int pthread_sigmask("int HOW" "const sigset_t *NEWMASK" "sigset_t *OLDMASK")
void pthread_testcancel("VOID")
char * ptsname("int FILEDES")
int ptsname_r("int FILEDES" "char *BUF" "size_t LEN")
int putc("int C" "FILE *STREAM")
int putchar("int C")
int putchar_unlocked("int C")
int putc_unlocked("int C" "FILE *STREAM")
int putenv("char *STRING")
int putpwent("const struct passwd *P" "FILE *STREAM")
int puts("const char *S")
struct utmp * pututline("const struct utmp *UTMP")
struct utmpx * pututxline("const struct utmpx *UTMP")
int putw("int W" "FILE *STREAM")
wint_t putwc("wchar_t WC" "FILE *STREAM")
wint_t putwchar("wchar_t WC")
wint_t putwchar_unlocked("wchar_t WC")
wint_t putwc_unlocked("wchar_t WC" "FILE *STREAM")
ssize_t pwrite("int FILEDES" "const void *BUFFER" "size_t SIZE" "off_t OFFSET")
ssize_t pwrite64("int FILEDES" "const void *BUFFER" "size_t SIZE" "off64_t OFFSET")
char * qecvt("long double VALUE" "int NDIGIT" "int *DECPT" "int *NEG")
int qecvt_r("long double VALUE" "int NDIGIT" "int *DECPT" "int *NEG" "char *BUF" "size_t LEN")
char * qfcvt("long double VALUE" "int NDIGIT" "int *DECPT" "int *NEG")
int qfcvt_r("long double VALUE" "int NDIGIT" "int *DECPT" "int *NEG" "char *BUF" "size_t LEN")
char * qgcvt("long double VALUE" "int NDIGIT" "char *BUF")
void qsort("void *ARRAY" "size_t COUNT" "size_t SIZE" "comparison_fn_t COMPARE")
int raise("int SIGNUM")
int rand("void")
long int random("void")
int random_r("struct random_data *restrict BUF" "int32_t *restrict RESULT")
int rand_r("unsigned int *SEED")
void * rawmemchr("const void *BLOCK" "int C")
ssize_t read("int FILEDES" "void *BUFFER" "size_t SIZE")
struct dirent * readdir("DIR *DIRSTREAM")
struct dirent64 * readdir64("DIR *DIRSTREAM")
int readdir64_r("DIR *DIRSTREAM" "struct dirent64 *ENTRY" "struct dirent64 **RESULT")
int readdir_r("DIR *DIRSTREAM" "struct dirent *ENTRY" "struct dirent **RESULT")
int readlink("const char *FILENAME" "char *BUFFER" "size_t SIZE")
ssize_t readv("int FILEDES" "const struct iovec *VECTOR" "int COUNT")
void * realloc("void *PTR" "size_t NEWSIZE")
char * realpath("const char *restrict NAME" "char *restrict RESOLVED")
int recv("int SOCKET" "void *BUFFER" "size_t SIZE" "int FLAGS")
int recvfrom("int SOCKET" "void *BUFFER" "size_t SIZE" "int FLAGS" "struct sockaddr *ADDR" "socklen_t *LENGTH-PTR")
int recvmsg("int SOCKET" "struct msghdr *MESSAGE" "int FLAGS")
int regcomp("regex_t *COMPILED" "const char *PATTERN" "int CFLAGS")
size_t regerror("int ERRCODE" "regex_t *COMPILED" "char *BUFFER" "size_t LENGTH")
int regexec("regex_t *COMPILED" "char *STRING" "size_t NMATCH" "regmatch_t MATCHPTR []" "int EFLAGS")
void regfree("regex_t *COMPILED")
int register_printf_function("int SPEC" "printf_function HANDLER-FUNCTION" "printf_arginfo_function ARGINFO-FUNCTION")
double remainder("double NUMERATOR" "double DENOMINATOR")
float remainderf("float NUMERATOR" "float DENOMINATOR")
long double remainderl("long double NUMERATOR" "long double DENOMINATOR")
int remove("const char *FILENAME")
int rename("const char *OLDNAME" "const char *NEWNAME")
void rewind("FILE *STREAM")
void rewinddir("DIR *DIRSTREAM")
char * rindex("const char *STRING" "int C")
double rint("double X")
float rintf("float X")
long double rintl("long double X")
int rmdir("const char *FILENAME")
double round("double X")
float roundf("float X")
long double roundl("long double X")
int rpmatch("const char *RESPONSE")
int sbrk("ptrdiff_t DELTA")
double scalb("double VALUE" "int EXPONENT")
float scalbf("float VALUE" "int EXPONENT")
long double scalbl("long double VALUE" "int EXPONENT")
long long int scalbln("double X" "long int n")
long long int scalblnf("float X" "long int n")
long long int scalblnl("long double X" "long int n")
long long int scalbn("double X" "int n")
long long int scalbnf("float X" "int n")
long long int scalbnl("long double X" "int n")
int scandir("const char *DIR" "struct dirent ***NAMELIST" "int("*SELECTOR")("const struct dirent *")" "int("*CMP")("const void *" "const void *")")
int scandir64("const char *DIR" "struct dirent64 ***NAMELIST" "int("*SELECTOR")("const struct dirent64 *")" "int("*CMP")("const void *" "const void *")")
int scanf("const char *TEMPLATE" "...")
int sched_getaffinity("pid_t PID" "size_t CPUSETSIZE" "cpu_set_t *CPUSET")
int sched_getparam("pid_t PID" "const struct sched_param *PARAM")
int sched_get_priority_max("int *POLICY");
int sched_get_priority_min("int *POLICY");
int sched_getscheduler("pid_t PID")
int sched_rr_get_interval("pid_t PID" "struct timespec *INTERVAL")
int sched_setaffinity("pid_t PID" "size_t CPUSETSIZE" "const cpu_set_t *CPUSET")
int sched_setparam("pid_t PID" "const struct sched_param *PARAM")
int sched_setscheduler("pid_t PID" "int POLICY" "const struct sched_param *PARAM")
int sched_yield("void")
unsigned short int * seed48("unsigned short int SEED16V[3]")
int seed48_r("unsigned short int SEED16V[3]" "struct drand48_data *BUFFER")
void seekdir("DIR *DIRSTREAM" "off_t POS")
int select("int NFDS" "fd_set *READ-FDS" "fd_set *WRITE-FDS" "fd_set *EXCEPT-FDS" "struct timeval *TIMEOUT")
int sem_destroy("sem_t * SEM")
int sem_getvalue("sem_t * SEM" "int * SVAL")
int sem_init("sem_t *SEM" "int PSHARED" "unsigned int VALUE")
int sem_post("sem_t * SEM")
int sem_trywait("sem_t * SEM")
int sem_wait("sem_t * SEM")
int send("int SOCKET" "void *BUFFER" "size_t SIZE" "int FLAGS")
int sendmsg("int SOCKET" "const struct msghdr *MESSAGE" "int FLAGS")
int sendto("int SOCKET" "void *BUFFER. size_t SIZE" "int FLAGS" "struct sockaddr *ADDR" "socklen_t LENGTH")
void setbuf("FILE *STREAM" "char *BUF")
void setbuffer("FILE *STREAM" "char *BUF" "size_t SIZE")
int setcontext("const ucontext_t *UCP")
int setdomainname("const char *NAME" "size_t LENGTH")
int setegid("gid_t NEWGID")
int setenv("const char *NAME" "const char *VALUE" "int REPLACE")
int seteuid("uid_t NEWEUID")
int setfsent("void")
int setgid("gid_t NEWGID")
void setgrent("void")
int setgroups("size_t COUNT" "gid_t *GROUPS")
void sethostent("int STAYOPEN")
int sethostid("long int ID")
int sethostname("const char *NAME" "size_t LENGTH")
int setitimer("int WHICH" "struct itimerval *NEW" "struct itimerval *OLD")
int setjmp("jmp_buf STATE")
void setkey("const char *KEY")
void setkey_r("const char *KEY" "struct crypt_data * DATA")
void setlinebuf("FILE *STREAM")
char * setlocale("int CATEGORY" "const char *LOCALE")
int setlogmask("int MASK")
FILE * setmntent("const char *FILE" "const char *MODE")
void setnetent("int STAYOPEN")
int setnetgrent("const char *NETGROUP")
int setpgid("pid_t PID" "pid_t PGID")
int setpgrp("pid_t PID" "pid_t PGID")
int setpriority("int CLASS" "int ID" "int NICEVAL")
void setprotoent("int STAYOPEN")
void setpwent("void")
int setregid("gid_t RGID" "gid_t EGID")
int setreuid("uid_t RUID" "uid_t EUID")
int setrlimit("int RESOURCE" "const struct rlimit *RLP")
int setrlimit64("int RESOURCE" "const struct rlimit64 *RLP")
void setservent("int STAYOPEN")
pid_t setsid("void")
int setsockopt("int SOCKET" "int LEVEL" "int OPTNAME" "void *OPTVAL" "socklen_t OPTLEN")
void * setstate("void *STATE")
int setstate_r("char *restrict STATEBUF" "struct random_data *restrict BUF")
int settimeofday("const struct timeval *TP" "const struct timezone *TZP")
int setuid("uid_t NEWUID")
void setutent("void")
void setutxent("void")
int setvbuf("FILE *STREAM" "char *BUF" "int MODE" "size_t SIZE")
int shutdown("int SOCKET" "int HOW")
int sigaction("int SIGNUM" "const struct sigaction *restrict ACTION" "struct sigaction *restrict OLD-ACTION")
int sigaddset("sigset_t *SET" "int SIGNUM")
int sigaltstack("const stack_t *restrict STACK" "stack_t *restrict OLDSTACK")
int sigblock("int MASK")
int sigdelset("sigset_t *SET" "int SIGNUM")
int sigemptyset("sigset_t *SET")
int sigfillset("sigset_t *SET")
int siginterrupt("int SIGNUM" "int FAILFLAG")
int sigismember("const sigset_t *SET" "int SIGNUM")
void siglongjmp("sigjmp_buf STATE" "int VALUE")
int sigmask("int SIGNUM")
sighandler_t signal("int SIGNUM" "sighandler_t ACTION")
int signbit("_float-type_ X")
long long int significand("double X")
long long int significandf("float X")
long long int significandl("long double X")
int sigpause("int MASK")
int sigpending("sigset_t *SET")
int sigprocmask("int HOW" "const sigset_t *restrict SET" "sigset_t *restrict OLDSET")
int sigsetjmp("sigjmp_buf STATE" "int SAVESIGS")
int sigsetmask("int MASK")
int sigstack("const struct sigstack *STACK" "struct sigstack *OLDSTACK")
int sigsuspend("const sigset_t *SET")
int sigvec("int SIGNUM" "const struct sigvec *ACTION" "struct sigvec *OLD-ACTION")
int sigwait("const sigset_t *SET" "int *SIG")
double sin("double X")
void sincos("double X" "double *SINX" "double *COSX")
void sincosf("float X" "float *SINX" "float *COSX")
void sincosl("long double X" "long double *SINX" "long double *COSX")
float sinf("float X")
double sinh("double X")
float sinhf("float X")
long double sinhl("long double X")
long double sinl("long double X")
int S_ISBLK("mode_t M")
int S_ISCHR("mode_t M")
int S_ISDIR("mode_t M")
int S_ISFIFO("mode_t M")
int S_ISLNK("mode_t M")
int S_ISREG("mode_t M")
int S_ISSOCK("mode_t M")
unsigned int sleep("unsigned int SECONDS")
int snprintf("char *S" "size_t SIZE" "const char *TEMPLATE" "...")
int socket("int NAMESPACE" "int STYLE" "int PROTOCOL")
int socketpair("int NAMESPACE" "int STYLE" "int PROTOCOL" "int FILEDES[2]")
int sprintf("char *S" "const char *TEMPLATE" "...")
double sqrt("double X")
float sqrtf("float X")
long double sqrtl("long double X")
void srand("unsigned int SEED")
void srand48("long int SEEDVAL")
int srand48_r("long int SEEDVAL" "struct drand48_data *BUFFER")
void srandom("unsigned int SEED")
int srandom_r("unsigned int SEED" "struct random_data *BUF")
int sscanf("const char *S" "const char *TEMPLATE" "...")
sighandler_t ssignal("int SIGNUM" "sighandler_t ACTION")
int stat("const char *FILENAME" "struct stat *BUF")
int stat64("const char *FILENAME" "struct stat64 *BUF")
int stime("time_t *NEWTIME")
char * stpcpy("char *restrict TO" "const char *restrict FROM")
char * stpncpy("char *restrict TO" "const char *restrict FROM" "size_t SIZE")
int strcasecmp("const char *S1" "const char *S2")
char * strcasestr("const char *HAYSTACK" "const char *NEEDLE")
char * strcat("char *restrict TO" "const char *restrict FROM")
char * strchr("const char *STRING" "int C")
char * strchrnul("const char *STRING" "int C")
int strcmp("const char *S1" "const char *S2")
int strcoll("const char *S1" "const char *S2")
char * strcpy("char *restrict TO" "const char *restrict FROM")
size_t strcspn("const char *STRING" "const char *STOPSET")
char * strdup("const char *S")
char * strdupa("const char *S")
char * strerror("int ERRNUM")
char * strerror_r("int ERRNUM" "char *BUF" "size_t N")
char * strfry("char *STRING")
size_t strftime("char *S" "size_t SIZE" "const char *TEMPLATE" "const struct tm *BROKENTIME")
size_t strlen("const char *S")
int strncasecmp("const char *S1" "const char *S2" "size_t N")
char * strncat("char *restrict TO" "const char *restrict FROM" "size_t SIZE")
int strncmp("const char *S1" "const char *S2" "size_t SIZE")
char * strncpy("char *restrict TO" "const char *restrict FROM" "size_t SIZE")
char * strndup("const char *S" "size_t SIZE")
char * strndupa("const char *S" "size_t SIZE")
size_t strnlen("const char *S" "size_t MAXLEN")
char * strpbrk("const char *STRING" "const char *STOPSET")
char * strptime("const char *S" "const char *FMT" "struct tm *TP")
char * strrchr("const char *STRING" "int C")
char * strsep("char **STRING_PTR" "const char *DELIMITER")
char * strsignal("int SIGNUM")
size_t strspn("const char *STRING" "const char *SKIPSET")
char * strstr("const char *HAYSTACK" "const char *NEEDLE")
double strtod("const char *restrict STRING" "char **restrict TAILPTR")
float strtof("const char *STRING" "char **TAILPTR")
intmax_t strtoimax("const char *restrict STRING" "char **restrict TAILPTR" "int BASE")
char * strtok("char *restrict NEWSTRING" "const char *restrict DELIMITERS")
char * strtok_r("char *NEWSTRING" "const char *DELIMITERS" "char **SAVE_PTR")
long int strtol("const char *restrict STRING" "char **restrict TAILPTR" "int BASE")
long double strtold("const char *STRING" "char **TAILPTR")
long long int strtoll("const char *restrict STRING" "char **restrict TAILPTR" "int BASE")
long long int strtoq("const char *restrict STRING" "char **restrict TAILPTR" "int BASE")
unsigned long int strtoul("const char *retrict STRING" "char **restrict TAILPTR" "int BASE")
unsigned long long int strtoull("const char *restrict STRING" "char **restrict TAILPTR" "int BASE")
uintmax_t strtoumax("const char *restrict STRING" "char **restrict TAILPTR" "int BASE")
unsigned long long int strtouq("const char *restrict STRING" "char **restrict TAILPTR" "int BASE")
int strverscmp("const char *S1" "const char *S2")
size_t strxfrm("char *restrict TO" "const char *restrict FROM" "size_t SIZE")
int stty("int FILEDES" "struct sgttyb * attributes")
int S_TYPEISMQ("struct stat *S")
int S_TYPEISSEM("struct stat *S")
int S_TYPEISSHM("struct stat *S")
int SUN_LEN("_struct sockaddr_un *_ PTR")
int swapcontext("ucontext_t *restrict OUCP" "const ucontext_t *restrict UCP")
int swprintf("wchar_t *S" "size_t SIZE" "const wchar_t *TEMPLATE" "...")
int swscanf("const wchar_t *WS" "const char *TEMPLATE" "...")
int symlink("const char *OLDNAME" "const char *NEWNAME")
int sync("void")
long int syscall("long int SYSNO" "...")
long int sysconf("int PARAMETER")
void syslog("int FACILITY_PRIORITY" "char *FORMAT" "...")
int system("const char *COMMAND")
sighandler_t sysv_signal("int SIGNUM" "sighandler_t ACTION")
double tan("double X")
float tanf("float X")
double tanh("double X")
float tanhf("float X")
long double tanhl("long double X")
long double tanl("long double X")
int tcdrain("int FILEDES")
int tcflow("int FILEDES" "int ACTION")
int tcflush("int FILEDES" "int QUEUE")
int tcgetattr("int FILEDES" "struct termios *TERMIOS-P")
pid_t tcgetpgrp("int FILEDES")
pid_t tcgetsid("int FILDES")
int tcsendbreak("int FILEDES" "int DURATION")
int tcsetattr("int FILEDES" "int WHEN" "const struct termios *TERMIOS-P")
int tcsetpgrp("int FILEDES" "pid_t PGID")
void * tdelete("const void *KEY" "void **ROOTP" "comparison_fn_t COMPAR")
void tdestroy("void *VROOT" "__free_fn_t FREEFCT")
off_t telldir("DIR *DIRSTREAM")
char * tempnam("const char *DIR" "const char *PREFIX")
char * textdomain("const char *DOMAINNAME")
void * tfind("const void *KEY" "void *const *ROOTP" "comparison_fn_t COMPAR")
double tgamma("double X")
float tgammaf("float X")
long double tgammal("long double X")
time_t time("time_t *RESULT")
time_t timegm("struct tm *BROKENTIME")
time_t timelocal("struct tm *BROKENTIME")
clock_t times("struct tms *BUFFER")
FILE * tmpfile("void")
FILE * tmpfile64("void")
char * tmpnam("char *RESULT")
char * tmpnam_r("char *RESULT")
int toascii("int C")
int _tolower("int C")
int tolower("int C")
int _toupper("int C")
int toupper("int C")
wint_t towctrans("wint_t WC" "wctrans_t DESC")
wint_t towlower("wint_t WC")
wint_t towupper("wint_t WC")
double trunc("double X")
int truncate("const char *FILENAME" "off_t LENGTH")
int truncate64("const char *NAME" "off64_t LENGTH")
float truncf("float X")
long double truncl("long double X")
void * tsearch("const void *KEY" "void **ROOTP" "comparison_fn_t COMPAR")
char * ttyname("int FILEDES")
int ttyname_r("int FILEDES" "char *BUF" "size_t LEN")
void twalk("const void *ROOT" "__action_fn_t ACTION")
void tzset("void")
int ulimit("int CMD" "...")
mode_t umask("mode_t MASK")
int umount("const char *FILE")
int umount2("const char *FILE" "int FLAGS")
int uname("struct utsname *INFO")
int ungetc("int C" "FILE *STREAM")
wint_t ungetwc("wint_t WC" "FILE *STREAM")
int unlink("const char *FILENAME")
int unlockpt("int FILEDES")
int unsetenv("const char *NAME")
void updwtmp("const char *WTMP_FILE" "const struct utmp *UTMP")
int utime("const char *FILENAME" "const struct utimbuf *TIMES")
int utimes("const char *FILENAME" "struct timeval TVP[2]")
int utmpname("const char *FILE")
int utmpxname("const char *FILE")
TYPE va_arg("va_list AP" "TYPE")
void __va_copy("va_list DEST" "va_list SRC")
void va_end("va_list AP")
void * valloc("size_t SIZE")
int vasprintf("char **PTR" "const char *TEMPLATE" "va_list AP")
void va_start("va_list AP")
void va_start("va_list AP" "LAST-REQUIRED")
void verr("int STATUS" "const char *FORMAT" "va_list")
void verrx("int STATUS" "const char *FORMAT" "va_list")
int versionsort("const void *A" "const void *B")
int versionsort64("const void *A" "const void *B")
pid_t vfork("void")
int vfprintf("FILE *STREAM" "const char *TEMPLATE" "va_list AP")
int vfscanf("FILE *STREAM" "const char *TEMPLATE" "va_list AP")
int vfwprintf("FILE *STREAM" "const wchar_t *TEMPLATE" "va_list AP")
int vfwscanf("FILE *STREAM" "const wchar_t *TEMPLATE" "va_list AP")
int vlimit("int RESOURCE" "int LIMIT")
int vprintf("const char *TEMPLATE" "va_list AP")
int vscanf("const char *TEMPLATE" "va_list AP")
int vsnprintf("char *S" "size_t SIZE" "const char *TEMPLATE" "va_list AP")
int vsprintf("char *S" "const char *TEMPLATE" "va_list AP")
int vsscanf("const char *S" "const char *TEMPLATE" "va_list AP")
int vswprintf("wchar_t *S" "size_t SIZE" "const wchar_t *TEMPLATE" "va_list AP")
int vswscanf("const wchar_t *S" "const wchar_t *TEMPLATE" "va_list AP")
void vsyslog("int FACILITY_PRIORITY" "char *FORMAT" "va_list arglist")
int vtimes("struct vtimes CURRENT" "struct vtimes CHILD")
void vwarn("const char *FORMAT" "va_list")
void vwarnx("const char *FORMAT" "va_list")
int vwprintf("const wchar_t *TEMPLATE" "va_list AP")
int vwscanf("const wchar_t *TEMPLATE" "va_list AP")
pid_t wait("int *STATUS-PTR")
pid_t wait3("union wait *STATUS-PTR" "int OPTIONS" "struct rusage *USAGE")
pid_t wait4("pid_t PID" "int *STATUS-PTR" "int OPTIONS" "struct rusage *USAGE")
pid_t waitpid("pid_t PID" "int *STATUS-PTR" "int OPTIONS")
void warn("const char *FORMAT" "...")
void warnx("const char *FORMAT" "...")
int WCOREDUMP("int STATUS")
wchar_t * wcpcpy("wchar_t *restrict WTO" "const wchar_t *restrict WFROM")
wchar_t * wcpncpy("wchar_t *restrict WTO" "const wchar_t *restrict WFROM" "size_t SIZE")
size_t wcrtomb("char *restrict S" "wchar_t WC" "mbstate_t *restrict PS")
int wcscasecmp("const wchar_t *WS1" "const wchar_T *WS2")
wchar_t * wcscat("wchar_t *restrict WTO" "const wchar_t *restrict WFROM")
wchar_t * wcschr("const wchar_t *WSTRING" "int WC")
wchar_t * wcschrnul("const wchar_t *WSTRING" "wchar_t WC")
int wcscmp("const wchar_t *WS1" "const wchar_t *WS2")
int wcscoll("const wchar_t *WS1" "const wchar_t *WS2")
wchar_t * wcscpy("wchar_t *restrict WTO" "const wchar_t *restrict WFROM")
size_t wcscspn("const wchar_t *WSTRING" "const wchar_t *STOPSET")
wchar_t * wcsdup("const wchar_t *WS")
size_t wcsftime("wchar_t *S" "size_t SIZE" "const wchar_t *TEMPLATE" "const struct tm *BROKENTIME")
size_t wcslen("const wchar_t *WS")
int wcsncasecmp("const wchar_t *WS1" "const wchar_t *S2" "size_t N")
wchar_t * wcsncat("wchar_t *restrict WTO" "const wchar_t *restrict WFROM" "size_t SIZE")
int wcsncmp("const wchar_t *WS1" "const wchar_t *WS2" "size_t SIZE")
wchar_t * wcsncpy("wchar_t *restrict WTO" "const wchar_t *restrict WFROM" "size_t SIZE")
size_t wcsnlen("const wchar_t *WS" "size_t MAXLEN")
size_t wcsnrtombs("char *restrict DST" "const wchar_t **restrict SRC" "size_t NWC" "size_t LEN" "mbstate_t *restrict PS")
wchar_t * wcspbrk("const wchar_t *WSTRING" "const wchar_t *STOPSET")
wchar_t * wcsrchr("const wchar_t *WSTRING" "wchar_t C")
size_t wcsrtombs("char *restrict DST" "const wchar_t **restrict SRC" "size_t LEN" "mbstate_t *restrict PS")
size_t wcsspn("const wchar_t *WSTRING" "const wchar_t *SKIPSET")
wchar_t * wcsstr("const wchar_t *HAYSTACK" "const wchar_t *NEEDLE")
double wcstod("const wchar_t *restrict STRING" "wchar_t **restrict TAILPTR")
float wcstof("const wchar_t *STRING" "wchar_t **TAILPTR")
intmax_t wcstoimax("const wchar_t *restrict STRING" "wchar_t **restrict TAILPTR" "int BASE")
wchar_t * wcstok("wchar_t *NEWSTRING" "const char *DELIMITERS")
long int wcstol("const wchar_t *restrict STRING" "wchar_t **restrict TAILPTR" "int BASE")
long double wcstold("const wchar_t *STRING" "wchar_t **TAILPTR")
long long int wcstoll("const wchar_t *restrict STRING" "wchar_t **restrict TAILPTR" "int BASE")
size_t wcstombs("char *STRING" "const wchar_t *WSTRING" "size_t SIZE")
long long int wcstoq("const wchar_t *restrict STRING" "wchar_t **restrict TAILPTR" "int BASE")
unsigned long int wcstoul("const wchar_t *restrict STRING" "wchar_t **restrict TAILPTR" "int BASE")
unsigned long long int wcstoull("const wchar_t *restrict STRING" "wchar_t **restrict TAILPTR" "int BASE")
uintmax_t wcstoumax("const wchar_t *restrict STRING" "wchar_t **restrict TAILPTR" "int BASE")
unsigned long long int wcstouq("const wchar_t *restrict STRING" "wchar_t **restrict TAILPTR" "int BASE")
wchar_t * wcswcs("const wchar_t *HAYSTACK" "const wchar_t *NEEDLE")
size_t wcsxfrm("wchar_t *restrict WTO" "const wchar_t *WFROM" "size_t SIZE")
int wctob("wint_t C")
int wctomb("char *STRING" "wchar_t WCHAR")
wctrans_t wctrans("const char *PROPERTY")
wctype_t wctype("const char *PROPERTY")
int WEXITSTATUS("int STATUS")
int WIFEXITED("int STATUS")
int WIFSIGNALED("int STATUS")
int WIFSTOPPED("int STATUS")
wchar_t * wmemchr("const wchar_t *BLOCK" "wchar_t WC" "size_t SIZE")
int wmemcmp("const wchar_t *A1" "const wchar_t *A2" "size_t SIZE")
wchar_t * wmemcpy("wchar_t *restrict WTO" "const wchar_t *restruct WFROM" "size_t SIZE")
wchar_t * wmemmove("wchar *WTO" "const wchar_t *WFROM" "size_t SIZE")
wchar_t * wmempcpy("wchar_t *restrict WTO" "const wchar_t *restrict WFROM" "size_t SIZE")
wchar_t * wmemset("wchar_t *BLOCK" "wchar_t WC" "size_t SIZE")
int wordexp("const char *WORDS" "wordexp_t *WORD-VECTOR-PTR" "int FLAGS")
void wordfree("wordexp_t *WORD-VECTOR-PTR")
int wprintf("const wchar_t *TEMPLATE" "...")
ssize_t write("int FILEDES" "const void *BUFFER" "size_t SIZE")
ssize_t writev("int FILEDES" "const struct iovec *VECTOR" "int COUNT")
int wscanf("const wchar_t *TEMPLATE" "...")
int WSTOPSIG("int STATUS")
int WTERMSIG("int STATUS")
double y0("double X")
float y0f("float X")
long double y0l("long double X")
double y1("double X")
float y1f("float X")
long double y1l("long double X")
double yn("int n" "double X")
float ynf("int n" "float X")
long double ynl("int n" "long double X")
